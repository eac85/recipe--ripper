{"ast":null,"code":"var _jsxFileName = \"/Users/emery/Desktop/recipe-ripper-app/src/RecipeRipper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from \"./Button\";\nimport './css/fonts.css';\nimport './css/index.css';\nimport logic from \"./logic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeRipper() {\n  _s();\n  const [isPressed, setIsPressed] = useState(false);\n  const buttons = [{\n    id: 1,\n    name: 'start'\n  }, {\n    id: 2,\n    name: 'next'\n  }, {\n    id: 3,\n    name: 'send'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"RECIPE RIPPER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      id: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          paddingTop: '20px'\n        },\n        children: [buttons.map(button => /*#__PURE__*/_jsxDEV(Button, {\n          name: button.name,\n          text: button.name,\n          isPressed: isPressed,\n          setIsPressed: setIsPressed,\n          id: button.id\n        }, button.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"textarea1\",\n          children: \"RECIPE RIPPER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"textarea1\",\n          cols: \"32\",\n          children: \"300 g (2 \\xBD cups) plain (all-purpose) flour or white bread flour plus extra as needed 40 g (3 Tbsp) caster (superfine) sugar 6 g (2 tsp) instant/fast action yeast \\xBD tsp salt 180 ml (\\xBE cup) unsweetened non-dairy milk (soy is best) lukewarm 80 g (\\u2153 cup) vegan block butter/margarine softened 60 g (\\xBC cup) vegan butter/margarine 60 g (2 oz) dark chocolate chopped 20 g (2 Tbsp) cocoa powder 30 g (2 \\xBD Tbsp) light brown soft sugar \\xBC tsp cinnamon (optional) pinch salt 100 g (3 \\xBD oz) chocolate chips or chopped dark chocolate or pecans 60 g (\\xBC cup + 1 Tbsp) granulated sugar 60 ml (\\xBC cup) water\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"textarea2\",\n          cols: \"32\",\n          style: \"display: none;\",\n          children: \"Ideally you should start the day before you want to bake the babka. Place the flour, sugar, yeast and salt in a large bowl or the bowl of a stand mixer fitted with a dough hook. Mix to combine. Add the lukewarm milk and mix to form a rough dough. Knead until it forms a smooth ball then add the softened butter. Continue to knead until the butter is fully incorporated and the dough is smooth and elastic. It may seem greasy and messy at first but keep kneading and I promise you the butter will all mix in and the dough will become smooth. Once the butter is fully incorporated the dough should look smooth and silky and it should pull away from the sides of the bowl cleanly. It should still be soft and slightly sticky but if it seems too wet then you can knead in a little more flour; be careful not to add too much however.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeRipper, \"xbZH3DzXyTYDyv25dIidXDvNjLA=\");\n_c = RecipeRipper;\nexport default RecipeRipper;\nvar _c;\n$RefreshReg$(_c, \"RecipeRipper\");","map":{"version":3,"names":["React","useState","Button","logic","jsxDEV","_jsxDEV","RecipeRipper","_s","isPressed","setIsPressed","buttons","id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","paddingTop","map","button","text","for","cols","_c","$RefreshReg$"],"sources":["/Users/emery/Desktop/recipe-ripper-app/src/RecipeRipper.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from \"./Button\";\nimport './css/fonts.css';\nimport './css/index.css';\nimport logic from \"./logic\";\n\nfunction RecipeRipper() {\n   const [isPressed, setIsPressed] = useState(false);\n\n   const buttons = [\n    { id: 1, name: 'start' },\n    { id: 2, name: 'next' },\n    { id: 3, name: 'send' },\n  ];\n\n  \n  return (\n    <div>\n      <h1 id=\"title\">RECIPE RIPPER</h1>\n      <div style={{ display: 'flex', justifyContent: 'center' }} id=\"page\">\n        <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '20px' }}>\n          {buttons.map((button) => (\n        <Button\n          key={button.id}\n          name={button.name}\n          text={button.name}\n          isPressed={isPressed}\n          setIsPressed={setIsPressed}\n          id={button.id}\n        />\n      ))}\n        <label for=\"textarea1\">RECIPE RIPPER</label>\n          <textarea id=\"textarea1\"  cols=\"32\">300 g (2 ½ cups) plain (all-purpose) flour or white bread flour plus extra as needed\n40 g (3 Tbsp) caster (superfine) sugar\n6 g (2 tsp) instant/fast action yeast\n½ tsp salt\n180 ml (¾ cup) unsweetened non-dairy milk (soy is best) lukewarm\n80 g (⅓ cup) vegan block butter/margarine softened\n\n60 g (¼ cup) vegan butter/margarine\n60 g (2 oz) dark chocolate chopped\n20 g (2 Tbsp) cocoa powder\n30 g (2 ½ Tbsp) light brown soft sugar\n¼ tsp cinnamon (optional)\npinch salt\n100 g (3 ½ oz) chocolate chips or chopped dark chocolate or pecans\n\n60 g (¼ cup + 1 Tbsp) granulated sugar\n60 ml (¼ cup) water\n     </textarea>\n          <textarea id=\"textarea2\"  cols=\"32\" style=\"display: none;\">Ideally you should start the day before you want to bake the babka. Place the flour, sugar, yeast and salt in a large bowl or the bowl of a stand mixer fitted with a dough hook. Mix to combine.\nAdd the lukewarm milk and mix to form a rough dough. Knead until it forms a smooth ball then add the softened butter.\nContinue to knead until the butter is fully incorporated and the dough is smooth and elastic. It may seem greasy and messy at first but keep kneading and I promise you the butter will all mix in and the dough will become smooth.\nOnce the butter is fully incorporated the dough should look smooth and silky and it should pull away from the sides of the bowl cleanly. It should still be soft and slightly sticky but if it seems too wet then you can knead in a little more flour; be careful not to add too much however.\n</textarea>\n\n                \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeRipper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,iBAAiB;AACxB,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,OAAO,GAAG,CACf;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,CACxB;EAGD,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAIM,EAAE,EAAC,OAAO;MAAAE,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjCZ,OAAA;MAAKa,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAACT,EAAE,EAAC,MAAM;MAAAE,QAAA,eAClER,OAAA;QAAKa,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAR,QAAA,GAC3EH,OAAO,CAACY,GAAG,CAAEC,MAAM,iBACtBlB,OAAA,CAACH,MAAM;UAELU,IAAI,EAAEW,MAAM,CAACX,IAAK;UAClBY,IAAI,EAAED,MAAM,CAACX,IAAK;UAClBJ,SAAS,EAAEA,SAAU;UACrBC,YAAY,EAAEA,YAAa;UAC3BE,EAAE,EAAEY,MAAM,CAACZ;QAAG,GALTY,MAAM,CAACZ,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOjB,CAAC,eACAZ,OAAA;UAAOoB,GAAG,EAAC,WAAW;UAAAZ,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC1CZ,OAAA;UAAUM,EAAE,EAAC,WAAW;UAAEe,IAAI,EAAC,IAAI;UAAAb,QAAA,EAAC;QAiBzC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAW,eACNZ,OAAA;UAAUM,EAAE,EAAC,WAAW;UAAEe,IAAI,EAAC,IAAI;UAACR,KAAK,EAAC,gBAAgB;UAAAL,QAAA,EAAC;QAIrE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAW;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAGG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACV,EAAA,CAvDQD,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAyDrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}