{"ast":null,"code":"let ingredients = null;\nfunction handleLogic(id) {\n  if (id === '1') {\n    document.getElementById('title').style.display = 'none';\n    document.getElementById('button1').style.display = 'none';\n    document.getElementById('button2').style.display = 'inline';\n    document.getElementById('textareas').style.display = 'inline';\n    document.getElementById('textarea1').style.display = 'inline';\n    document.getElementById('textarea1').value = `1 cup salted butter* softened\n1 cup white (granulated) sugar\n1 cup light brown sugar packed\n2 tsp pure vanilla extract\n2 large eggs\n3 cups all-purpose flour\n1 tsp baking soda\n½ tsp baking powder\n1 tsp sea salt\n2 cups chocolate chips (or chunks, or chopped chocolate)`;\n    document.getElementById('textarea2').value = `Preheat oven to 375 degrees F. Line a baking pan with parchment paper and set aside.\nIn a separate bowl mix flour, baking soda, salt, baking powder. Set aside.\nCream together butter and sugars until combined.\nBeat in eggs and vanilla until fluffy.\nMix in the dry ingredients until combined.\nAdd 12 oz package of chocolate chips and mix well.\nRoll 2-3 TBS (depending on how large you like your cookies) of dough at a time into balls and place them evenly spaced on your prepared cookie sheets. (alternately, use a small cookie scoop to make your cookies).\nBake in preheated oven for approximately 8-10 minutes. Take them out when they are just BARELY starting to turn brown.\nLet them sit on the baking pan for 2 minutes before removing to cooling rack`;\n  }\n  if (id === '2') {\n    document.getElementById('textarea1').style.display = 'none';\n    document.getElementById('textarea2').style.display = 'inline';\n    document.getElementById('button2').style.display = 'none';\n    document.getElementById('button3').style.display = 'inline';\n    ingredients = separateIngredients(document.getElementById('textarea1').value);\n    console.log(\"ingredients= \");\n    console.log(ingredients);\n  }\n  if (id === '3') {\n    document.getElementById('textarea2').style.display = 'inline';\n    document.getElementById('button3').style.display = 'none';\n    var instructions = document.getElementById('textarea2').value;\n    console.log(\"instructions=\" + instructions);\n    sessionStorage.setItem(\"instructions\", instructions);\n    var generatedRecipe = substituteIngredients(ingredients, instructions);\n    document.getElementById('textarea2').value = generatedRecipe;\n  }\n}\nfunction disappear(props) {\n  alert(props.name);\n  props.name = 'next';\n}\nexport { handleLogic, disappear };\nfunction separateIngredients(ingredients) {\n  var amtArray = ['cup', 'cups', 'tbs', 'tsp'];\n  var regex = new RegExp(amtArray.join('|'));\n  const ingredientsList = ingredients.split(\"\\n\");\n  const separatedIngredients = [];\n  for (let i = 0; i < ingredientsList.length; i++) {\n    const ingredient = ingredientsList[i].trim();\n    if (ingredient !== \"\") {\n      console.log(ingredient);\n      if (ingredient.includes('cup')) {\n        console.log('phhhh');\n        const amount = ingredient.split(0, ingredient.indexOf('cup') + 3);\n        const name = ingredient.replace(amount, \"\").trim();\n        separatedIngredients.push({\n          name,\n          amount\n        });\n      } else if (ingredient.includes('cups')) {} else if (ingredient.includes('tbs')) {} else if (ingredient.includes('tsp')) {} else {\n        const amount = ingredient.match(/^[\\d./\\u00BC\\u00BD]+/)[0];\n        const name = ingredient.replace(amount, \"\").trim();\n        separatedIngredients.push({\n          name,\n          amount\n        });\n      }\n    }\n  }\n  return separatedIngredients;\n}\nfunction substituteIngredients(ingredientArray, instructions) {\n  let result = instructions;\n  console.log(ingredientArray[0].name);\n  for (let i = 0; i < ingredientArray.length; i++) {\n    let ingredient = ingredientArray[i].name;\n    console.log(\"ingredient[i].name \" + ingredient);\n    let regex = new RegExp(ingredient, 'g');\n    console.log(i + ' ' + ingredient);\n    console.log(regex);\n    result = result.replace(regex, ingredientArray[i].amount + ' ' + ingredient);\n    console.log(result);\n  }\n  return result;\n}","map":{"version":3,"names":["ingredients","handleLogic","id","document","getElementById","style","display","value","separateIngredients","console","log","instructions","sessionStorage","setItem","generatedRecipe","substituteIngredients","disappear","props","alert","name","amtArray","regex","RegExp","join","ingredientsList","split","separatedIngredients","i","length","ingredient","trim","includes","amount","indexOf","replace","push","match","ingredientArray","result"],"sources":["/Users/emery/Desktop/recipe-ripper/src/logic.js"],"sourcesContent":["let ingredients = null;\n\nfunction handleLogic(id) {\n  if(id === '1') {\n        document.getElementById('title').style.display = 'none';\n        document.getElementById('button1').style.display = 'none';\n        document.getElementById('button2').style.display = 'inline';\n        document.getElementById('textareas').style.display = 'inline';\n        document.getElementById('textarea1').style.display = 'inline';\n        document.getElementById('textarea1').value = `1 cup salted butter* softened\n1 cup white (granulated) sugar\n1 cup light brown sugar packed\n2 tsp pure vanilla extract\n2 large eggs\n3 cups all-purpose flour\n1 tsp baking soda\n½ tsp baking powder\n1 tsp sea salt\n2 cups chocolate chips (or chunks, or chopped chocolate)`;\n        document.getElementById('textarea2').value = `Preheat oven to 375 degrees F. Line a baking pan with parchment paper and set aside.\nIn a separate bowl mix flour, baking soda, salt, baking powder. Set aside.\nCream together butter and sugars until combined.\nBeat in eggs and vanilla until fluffy.\nMix in the dry ingredients until combined.\nAdd 12 oz package of chocolate chips and mix well.\nRoll 2-3 TBS (depending on how large you like your cookies) of dough at a time into balls and place them evenly spaced on your prepared cookie sheets. (alternately, use a small cookie scoop to make your cookies).\nBake in preheated oven for approximately 8-10 minutes. Take them out when they are just BARELY starting to turn brown.\nLet them sit on the baking pan for 2 minutes before removing to cooling rack`;\n  }\n  if(id === '2'){\n    document.getElementById('textarea1').style.display = 'none';\n    document.getElementById('textarea2').style.display = 'inline';\n    document.getElementById('button2').style.display = 'none';\n    document.getElementById('button3').style.display = 'inline';\n    ingredients = separateIngredients(document.getElementById('textarea1').value);\n    console.log(\"ingredients= \");\n    console.log(ingredients);\n  }\n  if(id === '3'){\n    document.getElementById('textarea2').style.display = 'inline';\n    document.getElementById('button3').style.display = 'none';\n    var instructions = document.getElementById('textarea2').value;\n    console.log(\"instructions=\" + instructions);\n    sessionStorage.setItem(\"instructions\", instructions);   \n    var generatedRecipe = substituteIngredients(ingredients, instructions);\n    document.getElementById('textarea2').value = generatedRecipe;\n  }\n}\nfunction disappear(props){\n  alert(props.name);\n  props.name = 'next';\n}\nexport  {handleLogic, disappear};\n\nfunction separateIngredients(ingredients) {\n  var amtArray = ['cup', 'cups', 'tbs', 'tsp'];\n  var regex = new RegExp(amtArray.join('|'));\n  \n  const ingredientsList = ingredients.split(\"\\n\");\n  const separatedIngredients = [];\n  for (let i = 0; i < ingredientsList.length; i++) {\n    const ingredient = ingredientsList[i].trim();\n    if (ingredient !== \"\") {\n      console.log(ingredient);\n      if(ingredient.includes('cup')){\n        console.log('phhhh')\n        const amount = ingredient.split(0, ingredient.indexOf('cup') + 3);\n        const name = ingredient.replace(amount, \"\").trim(); \n        separatedIngredients.push({ name, amount });\n      }\n      else if(ingredient.includes('cups')){\n\n      }\n      else if(ingredient.includes('tbs')){\n\n      }\n      else if(ingredient.includes('tsp')){\n\n      }\n      else {\n        const amount = ingredient.match(/^[\\d./\\u00BC\\u00BD]+/)[0];\n        const name = ingredient.replace(amount, \"\").trim(); \n        separatedIngredients.push({ name, amount });     \n      }\n    }\n  }\n  return separatedIngredients;\n}\n\n\nfunction substituteIngredients(ingredientArray, instructions) {\n  let result = instructions;\n  console.log(ingredientArray[0].name);\n  for (let i = 0; i < ingredientArray.length; i++) {\n    let ingredient = ingredientArray[i].name;\n    console.log(\"ingredient[i].name \" + ingredient);\n    let regex = new RegExp(ingredient, 'g');\n    console.log(i + ' ' + ingredient);\n    console.log(regex);\n    result = result.replace(regex, ingredientArray[i].amount + ' ' + ingredient);\n    console.log(result);\n  }\n\n  return result;\n}"],"mappings":"AAAA,IAAIA,WAAW,GAAG,IAAI;AAEtB,SAASC,WAAWA,CAACC,EAAE,EAAE;EACvB,IAAGA,EAAE,KAAK,GAAG,EAAE;IACTC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACvDH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACzDH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;IAC3DH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;IAC7DH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;IAC7DH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACG,KAAK,GAAI;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;IACjDJ,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACG,KAAK,GAAI;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;EAC3E;EACA,IAAGL,EAAE,KAAK,GAAG,EAAC;IACZC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IAC3DH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;IAC7DH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACzDH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;IAC3DN,WAAW,GAAGQ,mBAAmB,CAACL,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACG,KAAK,CAAC;IAC7EE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACV,WAAW,CAAC;EAC1B;EACA,IAAGE,EAAE,KAAK,GAAG,EAAC;IACZC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,QAAQ;IAC7DH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACzD,IAAIK,YAAY,GAAGR,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACG,KAAK;IAC7DE,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGC,YAAY,CAAC;IAC3CC,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC;IACpD,IAAIG,eAAe,GAAGC,qBAAqB,CAACf,WAAW,EAAEW,YAAY,CAAC;IACtER,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACG,KAAK,GAAGO,eAAe;EAC9D;AACF;AACA,SAASE,SAASA,CAACC,KAAK,EAAC;EACvBC,KAAK,CAACD,KAAK,CAACE,IAAI,CAAC;EACjBF,KAAK,CAACE,IAAI,GAAG,MAAM;AACrB;AACA,SAASlB,WAAW,EAAEe,SAAS;AAE/B,SAASR,mBAAmBA,CAACR,WAAW,EAAE;EACxC,IAAIoB,QAAQ,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;EAC5C,IAAIC,KAAK,GAAG,IAAIC,MAAM,CAACF,QAAQ,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;EAE1C,MAAMC,eAAe,GAAGxB,WAAW,CAACyB,KAAK,CAAC,IAAI,CAAC;EAC/C,MAAMC,oBAAoB,GAAG,EAAE;EAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,eAAe,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC/C,MAAME,UAAU,GAAGL,eAAe,CAACG,CAAC,CAAC,CAACG,IAAI,EAAE;IAC5C,IAAID,UAAU,KAAK,EAAE,EAAE;MACrBpB,OAAO,CAACC,GAAG,CAACmB,UAAU,CAAC;MACvB,IAAGA,UAAU,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAC;QAC5BtB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpB,MAAMsB,MAAM,GAAGH,UAAU,CAACJ,KAAK,CAAC,CAAC,EAAEI,UAAU,CAACI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjE,MAAMd,IAAI,GAAGU,UAAU,CAACK,OAAO,CAACF,MAAM,EAAE,EAAE,CAAC,CAACF,IAAI,EAAE;QAClDJ,oBAAoB,CAACS,IAAI,CAAC;UAAEhB,IAAI;UAAEa;QAAO,CAAC,CAAC;MAC7C,CAAC,MACI,IAAGH,UAAU,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAC,CAEpC,CAAC,MACI,IAAGF,UAAU,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAC,CAEnC,CAAC,MACI,IAAGF,UAAU,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAC,CAEnC,CAAC,MACI;QACH,MAAMC,MAAM,GAAGH,UAAU,CAACO,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAMjB,IAAI,GAAGU,UAAU,CAACK,OAAO,CAACF,MAAM,EAAE,EAAE,CAAC,CAACF,IAAI,EAAE;QAClDJ,oBAAoB,CAACS,IAAI,CAAC;UAAEhB,IAAI;UAAEa;QAAO,CAAC,CAAC;MAC7C;IACF;EACF;EACA,OAAON,oBAAoB;AAC7B;AAGA,SAASX,qBAAqBA,CAACsB,eAAe,EAAE1B,YAAY,EAAE;EAC5D,IAAI2B,MAAM,GAAG3B,YAAY;EACzBF,OAAO,CAACC,GAAG,CAAC2B,eAAe,CAAC,CAAC,CAAC,CAAClB,IAAI,CAAC;EACpC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,eAAe,CAACT,MAAM,EAAED,CAAC,EAAE,EAAE;IAC/C,IAAIE,UAAU,GAAGQ,eAAe,CAACV,CAAC,CAAC,CAACR,IAAI;IACxCV,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGmB,UAAU,CAAC;IAC/C,IAAIR,KAAK,GAAG,IAAIC,MAAM,CAACO,UAAU,EAAE,GAAG,CAAC;IACvCpB,OAAO,CAACC,GAAG,CAACiB,CAAC,GAAG,GAAG,GAAGE,UAAU,CAAC;IACjCpB,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;IAClBiB,MAAM,GAAGA,MAAM,CAACJ,OAAO,CAACb,KAAK,EAAEgB,eAAe,CAACV,CAAC,CAAC,CAACK,MAAM,GAAG,GAAG,GAAGH,UAAU,CAAC;IAC5EpB,OAAO,CAACC,GAAG,CAAC4B,MAAM,CAAC;EACrB;EAEA,OAAOA,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}